{"id":564021366,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1633098027,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/564021366/","is_pending":"Not Pending","title":"Course Schedule II","memory":"N/A","code":"class Solution {\npublic:\n    int v;\n    list<int>*adj;\n    queue<int>q;\n    void addEdges(int u,int v)\n    {\n        adj[u].push_back(v);\n    }\n    void topoHelper(int s,vector<bool>&visited)\n    {\n        visited[s]=true;\n        for(auto i=adj[s].begin();i!=adj[s].end();i++)\n        {\n            if(visited[*i]==false)\n            {\n                topoHelper(*i,visited);\n            }\n        }\n       q.push(s);\n    }\n    void topo_sort()\n    {\n        vector<bool>visited(v,false);\n        for(int i=0;i<v;i++)\n        {\n            if(visited[i]==false)\n                topoHelper(i,visited);\n        }\n        \n        \n    }\n        \n    vector<int> findOrder(int numCourses, vector<vector<int>>&prerequisites) {\n        v=numCourses;\n        adj=new list<int>[v];\n        for(int i=0;i<prerequisites.size();i++)\n        {\n            addEdges(prerequisites[i][0],prerequisites[i][1]);\n        }\n        topo_sort();\n        vector<int>ans;\n        while(!q.empty())\n        {\n            ans.push_back(q.front());\n            q.pop();\n        }\n        return ans;\n    }\n};","compare_result":"11111001111110100000000001000111011000101110","title_slug":"course-schedule-ii"}