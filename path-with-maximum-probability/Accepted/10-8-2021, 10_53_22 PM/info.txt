{"id":567934554,"lang":"cpp","time":"1 month, 1 week","timestamp":1633713802,"status_display":"Accepted","runtime":"148 ms","url":"/submissions/detail/567934554/","is_pending":"Not Pending","title":"Path with Maximum Probability","memory":"63 MB","code":"class Solution {\npublic:\n    int v;\n    list<pair<int,double>>*ar;\n    void addEdge(int p,int q,double wt)\n    {\n        ar[p].push_back(make_pair(q,wt));\n     ar[q].push_back(make_pair(p,wt));\n    }\n    double dijkstra(int start,int end)\n    {\n      vector<double>dist(v+1,-1.0);\n        priority_queue<pair<double,int>>pq;\n       pq.push(make_pair(1.0,start));\n        dist[start]=1.0;\n        vector<bool> visited(v, false);\n        while(!pq.empty())\n        {\n            int u=pq.top().second;\n            if(u==end)\n                return dist[u];\n            pq.pop();\n            if(visited[u]==true)\n                continue;\n            visited[u]=true;\n            for(auto i=ar[u].begin();i!=ar[u].end();i++)\n            {\n                int v=(*i).first;\n                double wt=(*i).second;\n                if(dist[v]<dist[u]*wt)\n                {\n                    dist[v]=dist[u]*wt;\n                    pq.push(make_pair(dist[v],v));\n                }\n            }\n        }\n        return 0.0;\n        \n    }\n    double maxProbability(int n, vector<vector<int>>& edges, vector<double>& succProb, int start, int end) {\n        v=n;\n        ar=new list<pair<int,double>>[n];\n        for(int i=0;i<edges.size();i++)\n        {\n            addEdge(edges[i][0],edges[i][1],succProb[i]);\n        }\n        return dijkstra(start,end);\n    }\n};","compare_result":"1111111111111111","title_slug":"path-with-maximum-probability"}