{"id":548485834,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1630605861,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/548485834/","is_pending":"Not Pending","title":"Unique Binary Search Trees II","memory":"16 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode *newNode(int item)\n{\n    TreeNode *temp = new TreeNode;\n    temp->val = item;\n    temp->left = temp->right = NULL;\n    return temp;\n}\n    vector <TreeNode *>calc(int start,int end)\n    {\n        vector<TreeNode *>llist;\n        if(start>end)\n        {\n            llist.push_back(nullptr);\n            return llist;\n        }\n        for(int i=start;i<=end;i++)\n        {\n            vector<TreeNode *>lefts=calc(start,i-1);\n            vector<TreeNode *>rights=calc(i+1,end);\n            for(int j=0;j<lefts.size();j++)\n            {\n                TreeNode *left=lefts[j];\n               for(int k=0;k<rights.size();k++)\n               {\n                   TreeNode *right=rights[k];\n                   TreeNode *node=newNode(i);\n                   node->left=left;\n                   node->right=right;\n                   llist.push_back(node);\n               }\n            }\n        }\n        return llist;\n    }\n    vector<TreeNode*> generateTrees(int n) {\n        return (calc(1,n));\n    }\n};","compare_result":"11111111","title_slug":"unique-binary-search-trees-ii"}