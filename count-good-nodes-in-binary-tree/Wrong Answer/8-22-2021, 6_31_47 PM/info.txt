{"id":542395910,"lang":"cpp","time":"3Â months","timestamp":1629637307,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/542395910/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int count=0;\n    int calculate(TreeNode *root,vector <int> &path,int pathlength)\n    {\n        \n        if(root==nullptr)\n            return 0;\n        path.push_back(root->val);\n        pathlength++;\n        if((root->left==nullptr)&&(root->right==nullptr))//reached a leaf node\n        {\n            if(path[pathlength-1]>path[pathlength-2])\n               count++; \n           \n        }\n        else\n        {\n            calculate(root->left,path,pathlength);\n            calculate(root->right,path,pathlength);\n        }\n       return count;\n        \n    }\n    int goodNodes(TreeNode* root) {\n        if(root==nullptr)\n            return 0;\n        if(!root->left&&!root->right)\n            return 1;\n       \n       vector <int> path;\n  return(calculate(root,path,0)+1);\n        \n    }\n};","compare_result":"111000000100001000000000000100100100010000000000000000000000000","title_slug":"count-good-nodes-in-binary-tree"}