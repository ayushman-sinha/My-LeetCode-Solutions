{"id":542511569,"lang":"cpp","time":"3Â months","timestamp":1629657019,"status_display":"Accepted","runtime":"116 ms","url":"/submissions/detail/542511569/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"86.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int count=0;\n   void calculate(TreeNode *root,int max1)\n    {\n         if(root==NULL)\n            return;\n        if(root->val>=max1)\n           count++;\n        \n            calculate(root->left,max(max1,root->val));\n            calculate(root->right,max(max1,root->val));\n        \n        \n        \n    }\n    int goodNodes(TreeNode* root) {\n        if(root==nullptr)\n            return 0;\n        if(!root->left&&!root->right)\n            return 1;\n       \n     int max1=INT_MIN;\n    calculate(root,max1);\n        return count;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree"}