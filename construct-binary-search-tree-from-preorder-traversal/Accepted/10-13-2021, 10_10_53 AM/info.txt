{"id":570404461,"lang":"cpp","time":"1 month, 1 week","timestamp":1634100053,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/570404461/","is_pending":"Not Pending","title":"Construct Binary Search Tree from Preorder Traversal","memory":"13.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode *newNode(int data)\n    {\n        TreeNode *tmp=new TreeNode(data);\n        tmp->left=tmp->right=nullptr;\n        return tmp;\n    }\n    TreeNode *calc(vector<int>&preorder,int *ind,int low,int high)\n    {\n        if(*ind>=preorder.size()||low>high)\n            return nullptr;\n    \n        TreeNode *root=newNode(preorder[*ind]);\n            *ind=*ind+1;\n         if (low == high)\n        return root;\n        int i;\n        for( i=low;i<=high;i++)\n        {\n            if(preorder[i]>root->val)\n                break;\n            }\n            root->left=calc(preorder,ind,*ind,i-1);\n            root->right=calc(preorder,ind,i,high);\n          \n        \n          return root;\n        \n    }\n    TreeNode* bstFromPreorder(vector<int>& preorder) {\n        int ind=0;\n        return calc(preorder,&ind,0,preorder.size()-1);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-search-tree-from-preorder-traversal"}