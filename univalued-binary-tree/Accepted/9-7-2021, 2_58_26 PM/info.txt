{"id":550876443,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1631006906,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/550876443/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"10 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool f=true;\n    void calc(TreeNode *root,int k)\n    {     \n        if(root==nullptr)\n            return;\n        calc(root->left,k);\n        if(root&&k!=root->val)\n        {\n            f= false;\n            return;\n        }\n        calc(root->right,k);        \n    }\n    bool isUnivalTree(TreeNode* root) {\n        if(root==nullptr)\n            return true;            \n        calc(root,root->val);\n        return f;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree"}