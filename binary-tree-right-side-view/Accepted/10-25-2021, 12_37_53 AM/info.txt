{"id":576519262,"lang":"cpp","time":"3 weeks, 6 days","timestamp":1635102473,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/576519262/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"12.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n       \n        vector<int>ans;\n         if(!root)\n            return ans;\n        queue<TreeNode *>q;\n        q.push(root);\n        while(!q.empty())\n        {\n            int size=q.size();\n            \n            vector<int>right;\n            while(size--)\n            {\n                TreeNode *tmp=q.front();\n            q.pop();\n                right.push_back(tmp->val);\n                if(tmp->left)\n                    q.push(tmp->left);\n                if(tmp->right)\n                    q.push(tmp->right);\n            }\n            ans.push_back(right[right.size()-1]);\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}