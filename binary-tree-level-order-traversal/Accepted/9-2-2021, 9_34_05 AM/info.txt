{"id":548162994,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1630555445,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/548162994/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int>>ar;\n        if(root==nullptr)\n            return ar;\n        queue<TreeNode*>q;\n        q.push(root);\n        \n        while(!q.empty())\n        {\n          int siz=q.size();\n            vector<int>temp;\n            while(siz--)\n            {\n                TreeNode *tmp=q.front();\n                q.pop();\n                temp.push_back(tmp->val);\n                if(tmp->left)\n                    q.push(tmp->left);\n                if(tmp->right)\n                    q.push(tmp->right);\n            }\n            ar.push_back(temp);\n            \n        }\n        return ar;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}