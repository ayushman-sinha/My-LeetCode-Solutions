{"id":566368092,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1633460164,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/566368092/","is_pending":"Not Pending","title":"Keys and Rooms","memory":"11.7 MB","code":"class Solution {\npublic:\n    list<int>*gr;\n   \n    void addEdge(int u,int v)\n    {\n        gr[u].push_back(v);\n    //gr[v].push_back(u);\n    }\n    void DFS(vector<bool>&visited,int s)\n    {\n       // cout<<s<<\" \";\n     visited[s]=true;\n        for(auto i=gr[s].begin();i!=gr[s].end();i++)\n        {\n            if(visited[*i]==false)\n            {\n               \n                DFS(visited,*i);\n            }\n        }\n    }\n    bool canVisitAllRooms(vector<vector<int>>& rooms) {\n    \n        gr=new list<int>[rooms.size()];\n         vector<bool>visited(rooms.size(),false);\n        for(int i=0;i<rooms.size();i++)\n        {\n             \n            for(int j=0;j<rooms[i].size();j++)\n            {\n               cout<<rooms[i][j]<<\" \";\n              \n                \n                addEdge(i,rooms[i][j]);\n            }\n            \n        }\n      \n            DFS(visited,0);\n     \n        for(int i=0;i<rooms.size();i++)\n        {\n            if(visited[i]==false)\n                return false;\n        }\n        return true;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"keys-and-rooms"}