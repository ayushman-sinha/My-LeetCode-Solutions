{"id":550873490,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1631006299,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/550873490/","is_pending":"Not Pending","title":"Minimum Distance Between BST Nodes","memory":"9.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector <int>ar;\n    void calc(TreeNode *root)\n    {\n        if(root==nullptr)\n            return;\n        calc(root->left);\n        if(root!=nullptr)\n            ar.push_back(root->val);\n        calc(root->right);\n    }\n    int ans()\n    {\n        int dif=INT_MAX;\n        for(int i=0;i<ar.size()-1;i++)\n        {\n            if(ar[i+1]-ar[i]<dif)\n                dif=ar[i+1]-ar[i];\n        }\n        return dif;\n    }\n    int minDiffInBST(TreeNode* root) {\n        calc(root);\n        return ans();\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"minimum-distance-between-bst-nodes"}