{"id":577347608,"lang":"cpp","time":"3 weeks, 5 days","timestamp":1635227161,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/577347608/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root)\n        {\n        if(! root) \n            return nullptr;\n        TreeNode * tmp=root->left;\n        root->left=root->right;\n        root->right=tmp;\n        invertTree(root->left);\ninvertTree(root->right) ;\n        return root;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}