{"id":560833551,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1632591268,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/560833551/","is_pending":"Not Pending","title":"Baseball Game","memory":"8.5 MB","code":"class Solution {\npublic:\n    int calPoints(vector<string>& ops) {\n        stack<int>stk;//stack to store the scores\n        /*Since it is mentioned that there will always be a previous score we can put the condition of the string \n        being converted to the very last. In the end just keep popping the stack while finding the sum.*/\n        for(int i=0;i<ops.size();i++)\n        {\n            \n            if(ops[i][0]=='C')\n            {\n                stk.pop();\n            }\n            else if(ops[i][0]=='D')\n            {\n                stk.push(stk.top()*2);\n            }\n            else if(ops[i][0]=='+')\n            {\n                int k=stk.top();\n                stk.pop();\n                int k1=stk.top();\n                \n                stk.push(k);\n                stk.push(k1+k);\n            }\n            else\n            {\n               int k=stoi(ops[i]);\n                stk.push(k);\n            }\n        }\n        int sum=0;\n        while(!stk.empty())\n        {\n            sum+=stk.top();\n            stk.pop();\n        }\n        return sum;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"baseball-game"}