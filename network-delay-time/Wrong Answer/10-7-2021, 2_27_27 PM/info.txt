{"id":567263780,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1633597047,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/567263780/","is_pending":"Not Pending","title":"Network Delay Time","memory":"N/A","code":"class Solution {\npublic:\n    int v;\n    list<pair<int,int>>*adj;\n    void addEdge(int p,int q,int wt)\n    {\n        adj[p].push_back(make_pair(q,wt));\n       \n    }\n   int dijkstra(int src)\n    {\n        set<pair<int,int>>ds;\n        vector<int>dist(v,9999);\n        ds.insert(make_pair(0,src));\n        dist[src]=0;\n        while(!ds.empty())\n        {\n            pair<int,int> tmp=*(ds.begin());\n            ds.erase(ds.begin());\n            int u=tmp.second;\n          \n            for(auto i=adj[u].begin();i!=adj[u].end();i++)\n            {\n                \n                int V=(*i).first;\n                int wt=(*i).second;\n                if(dist[V]>dist[u]+wt)\n                {\n                     if (dist[V] !=9999)\n                    ds.erase(ds.find(make_pair(dist[V], V)));\n                    dist[V] = dist[u] + wt;\n                         ds.insert(make_pair(dist[V], V));\n                }\n            }\n        }\n       sort(dist.begin(),dist.end());\n       for(int i=0;i<v;i++)\n           cout<<dist[i]<<\" \";\n        return dist[dist.size()-1];\n        \n        \n    }\n    int networkDelayTime(vector<vector<int>>& times, int n, int k) {\n        v=n;\n        adj=new list<pair<int,int>>[v];\n        for(int i=0;i<times.size();i++)    \n      addEdge(times[i][0]-1,times[i][1]-1,times[i][2]);\n      if(k>times.size())\n          return -1;\n        return   dijkstra(times[k-1][0]-1);\n        }\n};","compare_result":"1111111010011100010000000000000000100100000000000100","title_slug":"network-delay-time"}