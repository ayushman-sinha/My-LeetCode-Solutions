{"id":549474961,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1630780735,"status_display":"Accepted","runtime":"120 ms","url":"/submissions/detail/549474961/","is_pending":"Not Pending","title":"Range Sum of BST","memory":"67.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int>ar;\n    void calc(TreeNode *root)\n    {\n        if(root==nullptr)\n            return;\n        calc(root->left);\n        ar.push_back(root->val);\n        calc(root->right);\n    }\n   int bin_ser(int a)\n   {\n       int low=0;\n       int high=ar.size()-1;int ind=0;\n       while(low<=high)\n       {\n           int mid=(low+high)/2;\n           if(ar[mid]==a)\n           {\n               return mid;\n           }\n           else if(ar[mid]>a)\n           {\n               high=mid -1;\n           }\n           else if(ar[mid]<a)\n           {\n               low=mid +1;\n           }\n       }\n       return 0;\n   }\n    \n    int rangeSumBST(TreeNode* root, int low, int high) {\n        calc(root);\n        int a=bin_ser(low);\n        int b=bin_ser(high);long long unsigned int sum=0;\n        for(int i=a;i<=b;i++)\n        {\n            sum+=ar[i];\n        }\n        return sum;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"range-sum-of-bst"}