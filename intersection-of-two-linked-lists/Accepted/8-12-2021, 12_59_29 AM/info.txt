{"id":536991530,"lang":"cpp","time":"3 months, 1 week","timestamp":1628710169,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/536991530/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"14.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {\n        if((headA==NULL)&&(headB==NULL))\n            return NULL;\n        if(headA==NULL)\n            return headB;\n        if(headB==NULL)\n            return headA;\n        ListNode *curA=headA;\n        ListNode *curB=headB;\n        int l1=0,l2=0;\n        while(curA!=NULL)\n        {          \n          l1++;\n            curA=curA->next;\n        }\n        while(curB!=NULL)\n        {          \n          l2++;\n            curB=curB->next;\n        }\n        int d=abs(l1-l2);\n        if(l1>l2)\n        {\n            while(d--)\n            {\n                headA=headA->next;\n            }\n        }\n        else\n        {\n           while(d--)\n            {\n                headB=headB->next;\n            } \n        }\n        while(headA!=headB)\n        {\n            headA=headA->next;\n             headB=headB->next;\n        }\n        return headA;\n\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"intersection-of-two-linked-lists"}