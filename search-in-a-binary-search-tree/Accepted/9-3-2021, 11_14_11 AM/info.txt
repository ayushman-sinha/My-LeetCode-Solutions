{"id":548736062,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1630647851,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/548736062/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"34.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        if(root==nullptr)\n            return nullptr;\n       \n       if(val<root->val)\n          return(searchBST(root->left,val));\n        else if(val>root->val)\n         return(searchBST(root->right,val));\n    \n            return root;\n        \n        \n        \n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree"}