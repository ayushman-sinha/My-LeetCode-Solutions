{"id":550807990,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1630995076,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/550807990/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int c=0;\n    long int ans=0;\n    long int k=LONG_MIN;\n    bool b=false;\n    void calc(TreeNode *root)\n    {\n        if(root==nullptr)\n            return;\n        calc(root->left);\n         if(root->val>k&&c==1)\n        {\n            b=true;\n            ans=root->val;            \n            return;\n        }\n        if(root->val>k)\n        {\n            k=root->val;\n            c++;\n        }\n       \n        calc(root->right);\n    }\n    int findSecondMinimumValue(TreeNode* root) {\n        calc(root);\n        if(b==true)\n        return ans;\n        else\n            return -1;\n    }\n};","compare_result":"111111000111000000000000100000000001110","title_slug":"second-minimum-node-in-a-binary-tree"}