{"id":550832497,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1630998857,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/550832497/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n  vector<long int>ar;\n    void calc(TreeNode *root)\n    {\n        if(root==nullptr)\n            return;\n         if(root!=nullptr)\n             ar.push_back(root->val);  \n        calc(root->left);\n             \n        calc(root->right);\n    }\n    int ans()\n    {\n        \n        for(int i=0;i<ar.size()-1;i++)\n        {\n            cout<<ar[i]<<\" \";\n            if(ar[i]<ar[i+1])\n                return ar[i+1];\n        }\n        cout<<\"\\n\";\n        return -1;\n    }\n    int findSecondMinimumValue(TreeNode* root) {\n        calc(root);\n        return(ans());\n    }\n};","compare_result":"111111111111111111111101111111111111001","title_slug":"second-minimum-node-in-a-binary-tree"}