{"id":548192405,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1630559237,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/548192405/","is_pending":"Not Pending","title":"Binary Tree Paths","memory":"14.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector <string> ans;        \n    void calc(TreeNode *root,string str)\n    {       \n        if(root==nullptr)\n            return;  \n       \n       str=str+(to_string(root->val))+\"->\";\n        calc(root->left,str);\n        calc(root->right,str);\n        if(root->left==nullptr&&root->right==nullptr)\n        {\n            int a=str.length()-2;\n            str.erase(a,a+1);\n        ans.push_back(str);\n        }\n       \n    }\n    vector<string> binaryTreePaths(TreeNode* root) {\n        string str;\n     calc(root,str);\n        return ans;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-paths"}