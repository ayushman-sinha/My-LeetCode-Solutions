{"id":568629253,"lang":"cpp","time":"1 month, 1 week","timestamp":1633835869,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/568629253/","is_pending":"Not Pending","title":"Minimum Operations to Make a Uni-Value Grid","memory":"N/A","code":"class Solution {\npublic:\n    int minOperations(vector<vector<int>>& grid, int x) {\n        vector<int>ar;\n        for(int i=0;i<grid.size();i++)\n        {\n            for(int j=0;j<grid[0].size();j++)\n            {\n                ar.push_back(grid[i][j]);\n            }\n        }\n        sort(ar.begin(),ar.end());\n        if((ar[ar.size()-1]-ar[0])%x!=0)\n            return -1;\n        int c=0;\n        c=(ar[ar.size()-1]-ar[0])/x;\n        int a=1;\n        int b=ar.size()-2;\n        while(a<=b)\n        {\n            c+=((ar[b]-ar[a])/x);\n            a++;\n            b--;\n        }\n        return c;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111110110111111","title_slug":"minimum-operations-to-make-a-uni-value-grid"}