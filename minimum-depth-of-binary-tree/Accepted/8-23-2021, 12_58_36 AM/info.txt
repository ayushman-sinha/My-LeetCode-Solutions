{"id":542535609,"lang":"cpp","time":"3Â months","timestamp":1629660516,"status_display":"Accepted","runtime":"224 ms","url":"/submissions/detail/542535609/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"144.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n      if(root==nullptr)\n          return 0;\n        return(calc(root));\n      \n        \n    }\n    int calc(TreeNode *root)\n    {\n          if(root==nullptr)\n            return 10001;\n         if(root->left==nullptr && root->right==nullptr) \n             return 1;\n       int lheight=calc(root->left);\n       int rheight=calc(root->right);\n        return(1+min(lheight,rheight));\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree"}