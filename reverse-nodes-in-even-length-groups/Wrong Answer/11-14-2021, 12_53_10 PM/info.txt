{"id":586924445,"lang":"cpp","time":"1Â week","timestamp":1636874590,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/586924445/","is_pending":"Not Pending","title":"Reverse Nodes in Even Length Groups","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    int calcSize(ListNode *cur)\n    {\n        int c=0;\n        while(cur!=nullptr)\n        {\n            cur=cur->next;\n            c++;\n        }\n        return c;\n    }\n    ListNode* reverseEvenLengthGroups(ListNode* head) {\n        if(head==nullptr||head->next==nullptr)\n            return head;\n        ListNode *cur=head;\n        ListNode *prev=nullptr;\n        int c=1;int m=2;int  prevG=1;\n        int size=calcSize(head);\n        //cout<<size;\n        while(cur!=nullptr)\n        {\n             \n             if(m==c&&c%2==0)\n            {\n                ListNode *cur1=cur;\n                int k=0;\n                ListNode *prev1=nullptr;\n                while(cur1!=nullptr&&k!=c)\n                {\n                    ListNode *tmp=cur1->next;\n                    cur1->next=prev1;\n                    prev1=cur1;\n                    cur1=tmp;\n                   // cout<<cur1->val<<\" \";\n                   \n                    k++;\n                    \n                }\n                  //cout<<\"\\n\"; \n               cur->next=cur1;              \n               prev->next=prev1;\n               c+=k;\n                prevG=m;\n                m=c*2;\n              \n                continue;\n            }\n            if((m!=c&&c%2!=0)&&(size-c)%2==0&&(size-c)<m)\n            {\n                ListNode *cur1=cur;\n                \n                ListNode *prev1=nullptr;\n                while(cur1!=nullptr)\n                {\n                    ListNode *tmp=cur1->next;\n                    cur1->next=prev1;\n                    prev1=cur1;\n                    cur1=tmp;\n                   // cout<<cur1->val<<\" \n                }\n                  //cout<<\"\\n\"; \n               cur->next=nullptr;              \n              prev->next=prev1;\n              \n               break;\n            }\n            \n           prev=cur;\n            cur=cur->next;\n            c++;\n        }\n        return head;\n            \n    }\n};","compare_result":"11111110100000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000","title_slug":"reverse-nodes-in-even-length-groups"}