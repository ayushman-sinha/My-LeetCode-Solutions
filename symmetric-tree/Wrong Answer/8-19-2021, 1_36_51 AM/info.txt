{"id":540581156,"lang":"cpp","time":"3Â months","timestamp":1629317211,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/540581156/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool check_sym(TreeNode *left_sub,TreeNode *right_sub)\n    {\n        if(left_sub==nullptr&&right_sub==nullptr)\n            return true;\n       else if(left_sub!=nullptr&&right_sub!=nullptr)\n        {\n            if(left_sub->val==right_sub->val)\n            {\n            return(check_sym(left_sub->left,right_sub->right));\n                return(check_sym(left_sub->right,right_sub->left));\n                }\n             \n        }\n               \n        return false;\n    }\n    bool isSymmetric(TreeNode* root) {\n        if(root==nullptr)\n            return true;\n        else\n           return (check_sym(root->left,root->right));\n    }\n};","compare_result":"11111111111111001111111111111111110111111110001110111011111110100111111101011111011010111011110110100110110101101011001011101111111111110100111011111011111101111110011111110010110001110011011010110","title_slug":"symmetric-tree"}