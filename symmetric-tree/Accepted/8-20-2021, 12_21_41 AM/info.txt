{"id":541074236,"lang":"cpp","time":"3Â months","timestamp":1629399101,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/541074236/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n  \n    bool isSymmetric(TreeNode* root) {\n        if(root==nullptr)\n            return true;\n       if(root->left==nullptr&&root->right==nullptr)\n           return true;\n        queue <TreeNode *> q;\n        q.push(root);\n        q.push(root);\n        TreeNode *lef;TreeNode*rig;\n        while(!q.empty())\n        {\n            lef=q.front();\n            q.pop();\n            rig=q.front();\n            q.pop();\n            if(lef->val!=rig->val)\n                return false;\n           if(lef->left&&rig->right)\n           {\n               q.push(lef->left);\n               q.push(rig->right);\n           }\n          else if(lef->left||rig->right)\n                return false;\n            if (lef->right&&rig->left)\n            {\n                q.push(lef->right);\n                q.push(rig->left);\n            }\n            else if(lef->right||rig->left)\n                return false;\n        }\n        return true;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}