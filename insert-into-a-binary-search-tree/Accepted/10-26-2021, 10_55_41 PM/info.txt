{"id":577583970,"lang":"cpp","time":"3 weeks, 4 days","timestamp":1635269141,"status_display":"Accepted","runtime":"84 ms","url":"/submissions/detail/577583970/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"57 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n  \n     TreeNode *prev;\n    void calc(TreeNode *root,int val)\n    {\n     \n        if(root==nullptr)\n        {\n            \n           TreeNode *tmp =new TreeNode(val);//creating a new node\n            tmp->left=nullptr;\n            tmp->right=nullptr;\n            if(val<prev->val)//Linking new node to the required place according to the value of the previous node\n                prev->left=tmp;\n            else\n                prev->right=tmp;            \n               return; \n        }\n       if(!root->left||!root->right)\n           prev=root;//storing the previous node\n        \n        /*recursively moving to the required location\n        Left subtree if element to be searched is smaller than root.\n        Right subtree if element to be searched is greater than root*/\n        if(root->val>val)\n            calc(root->left,val);    \n        if(root->val<val)     \n            calc(root->right,val);\n        /*\n         cout<<prev->val<<\"\\n\";\n        cout<<root->val<<\" \";\n        */\n       \n    }\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n       if(!root)//if the BST is empty\n       {\n           TreeNode *tmp =new TreeNode(val);\n            tmp->left=nullptr;\n            tmp->right=nullptr;\n           return tmp;\n       }\n            \n        calc(root,val);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"insert-into-a-binary-search-tree"}