{"id":577581787,"lang":"cpp","time":"3 weeks, 4 days","timestamp":1635268844,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/577581787/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode *tmp;\n     TreeNode *prev;\n    void calc(TreeNode *root,int val)\n    {\n     \n        if(root==nullptr)\n        {\n            \n           tmp =new TreeNode(val);\n            tmp->left=nullptr;\n            tmp->right=nullptr;\n            if(val<prev->val)\n                prev->left=tmp;\n            else\n                prev->right=tmp;            \n               return; \n        }\n       if(!root->left||!root->right)\n           prev=root;\n        if(root->val>val)\n            calc(root->left,val);        \n      \n        if(root->val<val)     \n            calc(root->right,val);\n        \n      \n        /*\n         cout<<prev->val<<\"\\n\";\n        cout<<root->val<<\" \";\n        */\n       \n    }\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        calc(root,val);\n        return root;\n    }\n};","compare_result":"11111111000000000000000000000000000","title_slug":"insert-into-a-binary-search-tree"}