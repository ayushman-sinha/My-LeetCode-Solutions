{"id":577567136,"lang":"cpp","time":"3 weeks, 4 days","timestamp":1635266792,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/577567136/","is_pending":"Not Pending","title":"Insert into a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void calc(TreeNode *root,int val)\n    {\n        if(!root)\n        {\n            TreeNode *root=new TreeNode(val);\n        }\n        \n        /*\n         cout<<prev->val<<\"\\n\";\n        cout<<root->val<<\" \";\n        */\n       \n    }\n    TreeNode* insertIntoBST(TreeNode* root, int val) {\n        calc(root,val);\n        return root;\n    }\n};","compare_result":"00000000000000000000000000000000000","title_slug":"insert-into-a-binary-search-tree"}