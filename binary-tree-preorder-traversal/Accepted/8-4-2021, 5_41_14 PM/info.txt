{"id":533165468,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1628079074,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/533165468/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int>ar1;\n    void preOrder(TreeNode *root)\n    {\n        if(root==nullptr)\n            return;\n        ar1.push_back(root->val);\n        preOrder(root->left);\n        preOrder(root->right);\n    }\n    vector<int> preorderTraversal(TreeNode* root) \n    {\n        preOrder(root);\n        return ar1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal"}