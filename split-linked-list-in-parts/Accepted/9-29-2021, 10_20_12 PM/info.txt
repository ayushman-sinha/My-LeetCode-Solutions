{"id":563027025,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1632934212,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/563027025/","is_pending":"Not Pending","title":"Split Linked List in Parts","memory":"8.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    vector<ListNode*> splitListToParts(ListNode* head, int k) {\n        ListNode *cur=head;\n        int size=0;\n        while(cur!=nullptr)\n        {\n            size++;\n            cur=cur->next;\n         }\n        vector<ListNode *>ans;\n        if(size<=k)\n        {\n             ListNode *cur3=head;\n           while(cur3!=nullptr)\n           {\n               ListNode *tmp=new ListNode(cur3->val);\n            tmp->next=nullptr;\n               ans.push_back(tmp);              \n               cur3=cur3->next;\n           }\n            for(int i=1;i<=k-size;i++)\n            {\n               \n                ans.push_back(nullptr);\n            }\n            return ans;\n        }\n        ListNode *cur2=head;\n       \n        for(int i=1;i<=k;i++)\n        {\n            if(i<=size%k)\n            {\n                ListNode *tmp=cur2;int c=1;\n                ListNode *cur1=cur2;\n                while(c<(size/k)+1)\n                {\n                    cur1=cur1->next;\n                    c++;\n                }              \n                cur2=cur1->next;\n                cur1->next=nullptr;\n                ans.push_back(tmp);   \n             }\n            else\n            {\n                 ListNode *tmp=cur2;int c=1;      \n                       ListNode *cur1=cur2;\n                while(c<size/k)\n                {\n                    cur1=cur1->next;\n                    c++;\n                }                \n                 cur2=cur1->next;\n                cur1->next=nullptr;\n                ans.push_back(tmp);   \n            }\n        }\n        return ans;\n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111","title_slug":"split-linked-list-in-parts"}