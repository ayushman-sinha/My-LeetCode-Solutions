{"id":549885708,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1630852184,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/549885708/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseBetween(ListNode* head, int left, int right) {\n        if(left==right)\n            return head;\n        int range=(right-left)+1;\n        ListNode *cur=head;\n        int left1=left;\n        ListNode *pr=nullptr;\n       \n        while(left!=1)\n        {\n            pr=cur;\n            cur=cur->next;\n            left--;\n         }\n        \n        ListNode *prev=nullptr;\n       ListNode *current=cur;\n        ListNode *tmp=cur;\n        int range1=range;\n        while(range--)\n        {\n            ListNode *temp=current->next;\n            current->next=prev;\n            prev=current;\n            current=temp;\n        }\n       if(range1==right)\n           return prev;\n      pr->next=prev;\n       cur=pr;\n       int c=0;\n        while(cur!=nullptr)\n        {\n            if(c<right-1)\n            {\n            cur=cur->next;\n            c++;\n            }\n            else\n            {\n                if(c==right-1)\n                {\n                    cur->next=current;\n                    c++;\n                }\n                else\n                {\n                    cur=cur->next;\n                }\n            }\n        }\n      //  tmp=pr;\n       \n    //  prev=cur->next;\n   \n        \n        return pr;\n        \n    }\n};","compare_result":"11111111011011101000111111011110101111000001","title_slug":"reverse-linked-list-ii"}