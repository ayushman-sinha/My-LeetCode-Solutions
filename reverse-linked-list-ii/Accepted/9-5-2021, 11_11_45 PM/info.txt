{"id":549960804,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1630863705,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/549960804/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"7.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseBetween(ListNode* head, int left, int right) {\n        if(left==right)\n            return head;\n        \n     \n    \n        ListNode *cur=head;\n       \n        ListNode *pr=head;\n     \n        int c=1;\n        while(c<left)\n        {\n            pr=cur;\n            cur=cur->next;\n            c++;\n         \n         }\n        \n        ListNode *prev=nullptr;\n       ListNode *current=cur;\n       ListNode *res=head;\n         ListNode *top=cur;\n        while(c<right+1)\n        {\n            ListNode *temp=cur->next;\n            cur->next=prev;\n            prev=cur;\n            cur=temp;\n            c++;\n            if(left==1&&c==right+1)\n              res=prev;\n            else if(c==right+1)\n                pr->next=prev;\n       top->next=temp;\n        }\n      return res;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"reverse-linked-list-ii"}