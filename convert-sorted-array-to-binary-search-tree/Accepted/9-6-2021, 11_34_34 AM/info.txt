{"id":550225497,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1630908274,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/550225497/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"21.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n   \n   TreeNode *calc(vector<int> &nums,int left,int right)\n    {\n       if(left>right)\n           return nullptr;\n        TreeNode *newNode=new TreeNode();\n       if(left==right)\n        {\n          newNode->val=nums[left];\n            newNode->left=nullptr;\n            newNode->right=nullptr;            \n        }\n        else\n        {\n            int mid=(left+right)/2;\n            newNode->val=nums[mid];\n            newNode->left=calc(nums,left,mid-1);\n            newNode->right=calc(nums,mid+1,right);         \n            \n        }\n       return newNode;\n       \n    }\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n       return calc(nums,0,nums.size()-1);\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}