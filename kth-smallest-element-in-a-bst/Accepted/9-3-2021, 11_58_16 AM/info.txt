{"id":548754829,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1630650496,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/548754829/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"24 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int c=0;\n    void calc(TreeNode *root,int &k)\n    {        \n        if(root==nullptr)\n            return;     \n        calc(root->left,k);\n         k--;\n           if(k==0)\n          c=root->val;           \n        calc(root->right,k);        \n    }\n    int kthSmallest(TreeNode* root, int k) {        \n        calc(root,k);\n        return c;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst"}