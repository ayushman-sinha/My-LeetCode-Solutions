{"id":555433142,"lang":"cpp","time":"2Â months","timestamp":1631723740,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/555433142/","is_pending":"Not Pending","title":"Longest Turbulent Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int maxTurbulenceSize(vector<int>& arr) {\n        int max_count=0;\n        \n        for(int i=0;i<arr.size()-1;i++)\n        {\n           int which=0;\n            if(arr[i]>arr[i+1])\n                which=1;\n           else if(arr[i]<arr[i+1])\n                which=2;\n            else\n                continue;\n                int c=0;\n            for(int j=i;j<arr.size()-1;j++)\n            {\n                if(which%2!=0)\n                {                   \n                    if(arr[j]>arr[j+1])\n                    {\n                        which++;\n                        c++;\n                    } \n                    else\n                    {\n                        max_count=max(max_count,c);\n                        break;\n                    }\n                    \n                 }\n                else\n                {\n                    if(arr[j]<arr[j+1])\n                    {\n                        which++;\n                        c++;\n                    }\n                    else\n                    {\n                         max_count=max(max_count,c);\n                        break;\n                    }\n                }\n            }\n        }\n        return max_count+1;\n        \n    }\n};","compare_result":"11111111011111001101011110111111111111111111111111111111111111111111111111111111111111110","title_slug":"longest-turbulent-subarray"}