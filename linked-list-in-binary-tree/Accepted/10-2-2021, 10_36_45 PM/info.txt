{"id":564593878,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1633194405,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/564593878/","is_pending":"Not Pending","title":"Linked List in Binary Tree","memory":"32.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool compare(ListNode* head, TreeNode* root)\n    {\n        if(head!=nullptr&&root==nullptr)\n         return false;\n        if(head->val==root->val&&head->next==nullptr)\n            return true;\n        if(head->val==root->val)\n        {\n       return compare(head->next,root->left)||compare(head->next,root->right);\n        }\n        return false;\n        \n    }\n bool dfs(ListNode* head, TreeNode* root)\n {\n     if(head!=nullptr&&root==nullptr)\n         return false;\n     if(compare(head,root))\n         return true;\n    return dfs(head,root->left)||dfs(head,root->right);\n  \n }\n    bool isSubPath(ListNode* head, TreeNode* root) {\n       \n      \n        return dfs(head,root);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"linked-list-in-binary-tree"}