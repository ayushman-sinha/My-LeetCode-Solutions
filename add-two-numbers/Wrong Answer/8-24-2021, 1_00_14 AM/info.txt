{"id":543058890,"lang":"cpp","time":"2 months, 4 weeks","timestamp":1629747014,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/543058890/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n  \n     ListNode* calc(ListNode* l1, ListNode* l2) {\n         if(l1->val==0&&l2->val!=0)\n             return l2;\n         if(l2->val==0&&l1->val!=0)\n             return l1;\n         if(l1->val==0&&l2->val==0)\n         {\n             ListNode *no=new ListNode(0);\n             return no;\n         }\n      long long int num1=0,num2=0;\n        while(l1!=nullptr)\n        {\n            num1=(num1*10)+l1->val;\n            l1=l1->next;\n        }\n         while(l2!=nullptr)\n        {\n            num2=(num2*10)+l2->val;\n            l2=l2->next;\n        }  \n        \n         //Reversing the NOS\n        long long int s1=0,s2=0;\n         while(num1>0)\n         {\n             s1=(s1*10)+(num1%10);\n             num1=num1/10;\n         }\n         while(num2>0)\n         {\n             s2=(s2*10)+(num2%10);\n              num2=num2/10;\n         }\n         long long int sum=s1+s2;\n        // cout<<s1<<\" \"<<s2<<endl;\n         long long int s=sum;\n         \n          ListNode *head=new ListNode();\n       \n         ListNode *temp=head;\n         while(s>0)\n         {\n            \n             int a=s%10;\n           ListNode *node= new ListNode(a); \n             temp->next=node;\n             temp=temp->next;\n             s=s/10;\n            \n         }\n         return head->next;\n     }\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        return(calc(l1,l2));\n    }\n};","compare_resulttitle_slug":"add-two-numbers"}