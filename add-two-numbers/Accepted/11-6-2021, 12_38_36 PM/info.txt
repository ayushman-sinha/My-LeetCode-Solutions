{"id":582819411,"lang":"cpp","time":"2Â weeks, 1Â day","timestamp":1636182516,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/582819411/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"71.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n  \n    \n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n       ListNode *sum,*sumcur;\n        ListNode *cur1=l1,*cur2=l2;\n        int carry=0;bool b=false;\n        while(cur1!=nullptr&&cur2!=nullptr)\n        {\n            if(b)\n            {\n            int tmpSum=(cur1->val+cur2->val+carry)%10;\n            carry=(cur1->val+cur2->val+carry)/10;\n            ListNode *newNode=new ListNode(tmpSum);\n            newNode->next=nullptr;\n                sumcur->next=newNode;\n                sumcur=sumcur->next;\n            }\n            else\n            {\n                int tmpSum=(cur1->val+cur2->val)%10;\n            carry=(cur1->val+cur2->val)/10;\n            ListNode *newNode=new ListNode(tmpSum);\n            newNode->next=nullptr;\n                sum=newNode;\n                sumcur=sum;\n                b=true;\n            }\n            cur1=cur1->next;\n            cur2=cur2->next;\n        }\n        if(cur1!=nullptr)\n        {\n            while(cur1!=nullptr)\n            {\n                 int tmpSum=(cur1->val+carry)%10;\n            carry=(cur1->val+carry)/10;\n            ListNode *newNode=new ListNode(tmpSum);\n            newNode->next=nullptr;\n                sumcur->next=newNode;\n                sumcur=sumcur->next;\n                cur1=cur1->next;\n            }\n        }\n        else if(cur2!=nullptr)\n        {\n            while(cur2!=nullptr)\n            {\n                 int tmpSum=(cur2->val+carry)%10;\n            carry=(cur2->val+carry)/10;\n            ListNode *newNode=new ListNode(tmpSum);\n            newNode->next=nullptr;\n                sumcur->next=newNode;\n                sumcur=sumcur->next;\n                cur2=cur2->next;\n            } \n        }\n        if(carry!=0)\n        {\n             ListNode *newNode=new ListNode(carry);\n            newNode->next=nullptr;\n                sumcur->next=newNode;\n                sumcur=sumcur->next;\n        }\n        return sum;\n    }\n};","compare_resulttitle_slug":"add-two-numbers"}