{"id":545762460,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1630183795,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/545762460/","is_pending":"Not Pending","title":"Sum of Root To Leaf Binary Numbers","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n   int res;\n    int todec(long long int s)\n    {\n      int c=0,k=0;\n        while(s!=0)\n        {\n            int a=s%10;\n            k=k+(pow(2,c)*a);\n            c++;\n            s=s/10;\n        }\n        return k;\n    }\n    void calc(TreeNode *root,long long int s)\n    {\n        //int s=0;\n         if(root==nullptr)\n             return;\n       // cout<<root->val<<\" \";\n        s=(s*10)+(root->val);\n        calc(root->left,s);\n         calc(root->right,s);\n     // cout<<s<<\" \";\n        if(root->left==nullptr&&root->right==nullptr)\n        {\n        int m=todec(s);\n        res=res+m;\n        }\n             \n        \n    }\n    int sumRootToLeaf(TreeNode* root) {\n        calc(root,0);\n        return res;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111100000","title_slug":"sum-of-root-to-leaf-binary-numbers"}