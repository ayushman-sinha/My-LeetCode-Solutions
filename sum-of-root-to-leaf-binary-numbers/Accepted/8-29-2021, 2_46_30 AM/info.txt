{"id":545771938,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1630185390,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/545771938/","is_pending":"Not Pending","title":"Sum of Root To Leaf Binary Numbers","memory":"24.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n   int res;\n    int add(vector<int>s)\n    {\n        int c=0;int k=0;\n        while(!s.empty())\n        {\n            k=k+(s.back()*pow(2,c));\n            c++;\n            s.pop_back();\n        }\n        return k;\n    }\n    void calc(TreeNode *root,vector<int>s,int c)\n    {\n        //int s=0;\n         if(root==nullptr)\n             return;\n       // cout<<root->val<<\" \";\n       s.push_back(root->val);\n        calc(root->left,s,c);\n         calc(root->right,s,c);\n     // cout<<s<<\" \";\n        if(root->left==nullptr&&root->right==nullptr)\n        {\n          int m=add(s);\n        res=res+m;\n        }\n             \n        \n    }\n    int sumRootToLeaf(TreeNode* root) {\n        vector<int>s;\n        calc(root,s,0);\n        return res;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-root-to-leaf-binary-numbers"}