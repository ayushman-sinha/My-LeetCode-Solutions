{"id":550885064,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1631008732,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/550885064/","is_pending":"Not Pending","title":"Leaf-Similar Trees","memory":"12.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int>ar1;\n        vector<int>ar2;\n    void calc(TreeNode *root,int c)\n    {\n        if(root==nullptr)\n            return;\n        calc(root->left,c);\n        if(root!=nullptr&&root->left==nullptr&&root->right==nullptr)\n        {\n            if(c==1)\n                ar1.push_back(root->val);\n            else\n                ar2.push_back(root->val);\n        }\n        calc(root->right,c);\n    }\n    bool check()\n    {\n        if(ar1.size()!=ar2.size())\n            return false;\n        for(int i=0;i<ar1.size();i++)\n        {\n            if(ar1[i]!=ar2[i])\n                return false;\n        }\n        return true;\n    }\n    bool leafSimilar(TreeNode* root1, TreeNode* root2) {\n        \n        \n        calc(root1,1);\n         calc(root2,2);\n        return check();\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"leaf-similar-trees"}