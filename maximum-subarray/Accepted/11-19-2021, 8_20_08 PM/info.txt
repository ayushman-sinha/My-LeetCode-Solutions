{"id":589602168,"lang":"cpp","time":"1 day, 22 hours","timestamp":1637333408,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/589602168/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"68.2 MB","code":"class Solution {\npublic:\n    int maxSubArray(vector<int>& nums) {\n        \n      int dp[100000],k=0;\n        dp[0]=nums[0];\n        for(int i=1;i<nums.size();i++)\n        {\n            dp[i]=max(nums[i]+dp[i-1],nums[i]);        \n            k++;\n        }\n       sort(dp,dp+k+1);\n        /*\n        for(int i=0;i<=k;i++)\n            cout<<dp[i]<<\" \";\n        cout<<\"\\n\";\n        */\n        return dp[k];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-subarray"}