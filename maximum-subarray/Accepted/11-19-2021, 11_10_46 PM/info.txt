{"id":589659109,"lang":"cpp","time":"1 day, 19 hours","timestamp":1637343646,"status_display":"Accepted","runtime":"104 ms","url":"/submissions/detail/589659109/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"68.2 MB","code":"class Solution {\npublic:\n    int maxSubArray(vector<int>& nums) {\n        \n      int dp[nums.size()+1];\n        dp[0]=nums[0];\n        int maxi=nums[0];\n        for(int i=1;i<nums.size();i++)\n        {\n            dp[i]=max(nums[i]+dp[i-1],nums[i]);      \n            maxi=max(maxi,dp[i]);          \n        }\n     \n        /*\n        for(int i=0;i<=k;i++)\n            cout<<dp[i]<<\" \";\n        cout<<\"\\n\";\n        */\n        return maxi;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-subarray"}