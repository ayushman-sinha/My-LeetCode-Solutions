{"id":574341268,"lang":"cpp","time":"1Â month","timestamp":1634739978,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/574341268/","is_pending":"Not Pending","title":"Convert Binary Number in a Linked List to Integer","memory":"8.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    int getDecimalValue(ListNode* head) {\n        long long int ans=0;\n        ListNode *cur1=head;\n        int c=0;\n        ListNode *prev=nullptr;\n        while(cur1!=nullptr)//Reversing the linked list\n        {\n            ListNode *tmp=cur1->next;\n            cur1->next=prev;\n            prev=cur1;\n            cur1=tmp;\n        }\n         ListNode *cur=prev;\n    \n        while(cur!=nullptr)\n        {\n            ans=ans+(cur->val*(pow(2,c)));//generating the decomal equivalent\n            c++;\n            cur=cur->next;\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"convert-binary-number-in-a-linked-list-to-integer"}