{"id":566080937,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1633415258,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/566080937/","is_pending":"Not Pending","title":"Next Permutation","memory":"N/A","code":"class Solution {\npublic:\n    vector<pair<vector<int>,int>>ans;int c=0;\n    bool should_swap(vector<int>nums,int cur,int start)\n    {\n          for (int i = start; i < cur; i++)\n        if (nums[i] == nums[cur])\n            return 0;\n    return 1;\n    }\n    void permute(vector<int>nums,int i,int n)\n    {\n        if(i==n)\n        {\n            ans.push_back(make_pair(nums,c));\n            c++;\n           return;\n        }\n        else\n        {\n            for(int j=i;j<=n;j++)\n            {\n               \n                if( should_swap(nums,j,i))\n                {\n                swap(nums[i],nums[j]);\n                permute(nums,i+1,n);\n               swap(nums[i],nums[j]);\n                }\n            }\n        }\n    }\n  \n    void nextPermutation(vector<int>& nums) {\n        permute(nums,0,nums.size()-1);\n      \n       sort(ans.begin(),ans.end());\n        /*\n        \n        for(int i=0;i<ans.size();i++)\n        {\n            for(int j=0;j<ans[i].first.size();j++)\n                cout<<ans[i].first[j]<<\" \";\n           cout<<\"->\"<<ans[i].second<<\"\\n\";\n        }\n        */\n        for(int i=0;i<ans.size();i++)\n        {\n             if(ans[i].second==0)\n             {\n                 if(i<ans.size()-1)\n                 {\n                      for(int j=0;j<ans[i].first.size();j++)\n                        {\n                            nums[j]=ans[i+1].first[j];\n              \n                        }\n                  \n                 }\n                 else\n                 {\n                     for(int j=0;j<ans[i].first.size();j++)\n                        {\n                            nums[j]=ans[0].first[j];\n              \n                        }\n                 }\n                 break;\n             }\n        }\n    \n       \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"next-permutation"}