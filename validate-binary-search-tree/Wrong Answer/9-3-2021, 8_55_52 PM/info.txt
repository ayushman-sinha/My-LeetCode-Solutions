{"id":548918510,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1630682752,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/548918510/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool b;\n    bool calc(TreeNode *root,int min,int max)\n    {\n       if(root==nullptr)\n           return true;\n        if(root->val<min||root->val>max)\n        {\n         \n            return false;\n        }\n        else if(root->right!=nullptr&&root->right->val<=root->val)\n        {\n            \n            return false;\n        }\n     return (calc(root->left,min,root->val))&&(calc(root->right,root->val,max));\n        \n    }\n\n    \n    bool isValidBST(TreeNode* root) {\n        if(root->left==nullptr&&root->right==nullptr)\n            return true;\n        b=calc(root,INT_MIN,INT_MAX);\n        return b;\n        \n    }\n};","compare_result":"11111011111111111011111111111111111111110111111111111111101111001111111111111001","title_slug":"validate-binary-search-tree"}