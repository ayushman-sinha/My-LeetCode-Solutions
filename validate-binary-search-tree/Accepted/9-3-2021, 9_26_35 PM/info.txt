{"id":548930634,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1630684595,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/548930634/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    bool calc(TreeNode *root,long long int min,long long int max)\n    {\n       if(root==nullptr)\n           return true;\n        if(root->val<=min||root->val>=max)\n        {\n         \n            return false;\n        }\n    \n     return calc(root->left,min,root->val)&&\n         calc(root->right,root->val,max);\n        \n    }\n\n    \n    bool isValidBST(TreeNode* root) {\n        bool b;\n        if(root->left==nullptr&&root->right==nullptr)\n            return true;\n        b=calc(root,LONG_MIN,LONG_MAX);\n        return b;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}