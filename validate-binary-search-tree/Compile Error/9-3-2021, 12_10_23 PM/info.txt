{"id":548759926,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1630651223,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/548759926/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool b;\n    void calc(TreeNode *root)\n    {\n        \n        if(root==nullptr)\n            return;\n       if(root->left&&root->right)\n       {\n           if(root->left->val<root->val&&root->right->val>root->val)\n               b=true;\n           else\n           {\n               b=false;\n               return;\n           }\n       }\n        calc(root->left);\n        calc(root->right);\n    }\n    bool isValidBST(TreeNode* root) {\n        if(root->left==nulllptr&&root->right==nullptr)\n            return true;\n        calc(root);\n        return b;\n        \n    }\n};","compare_result":null,"title_slug":"validate-binary-search-tree"}