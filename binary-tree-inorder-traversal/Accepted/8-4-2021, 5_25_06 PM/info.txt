{"id":533160365,"lang":"cpp","time":"3 months, 2 weeks","timestamp":1628078106,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/533160365/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n   void inOrder(TreeNode *root,vector <int> &ar1)\n   {\n       if(root==nullptr)\n           return;\n       inOrder(root->left,ar1);\n       ar1.push_back(root->val);\n       inOrder(root->right,ar1);\n           \n   }\n    vector<int> inorderTraversal(TreeNode* root)\n    {\n       vector <int> ar1;\n        inOrder(root,ar1);\n        return ar1;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}