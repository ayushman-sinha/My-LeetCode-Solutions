{"id":546311802,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1630271176,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/546311802/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n     int c=0; vector<int>vec;\n   void calc(TreeNode *root,int l)\n    {\n      \n         if(root==nullptr)\n            return;\n        calc(root->left,l+1); \n     \n        calc(root->right,l+1);\n        if(root->left==nullptr&&root->right==nullptr)\n        {\n         vec.push_back(l);\n        \n        }\n    }\n    void disp()\n    {\n        for(int i=0;i<vec.size();i++)\n        {\n            cout<<vec[i]<<\" \";\n        }\n        //sort(vec.begin(),vec.end());\n        if(vec.size()==1)\n            c=vec[0];\n        else\n            c=vec[0]+vec[vec.size()-1];\n        \n    }\n    int diameterOfBinaryTree(TreeNode* root) {\n        \n        if(root==nullptr)\n            return 0;\n        calc(root,0);\n        disp();\n        return c;\n    }\n};","compare_result":"11111111111011111110111110011101011011111111011111110010010110111101111111111111000111111100110010000001","title_slug":"diameter-of-binary-tree"}