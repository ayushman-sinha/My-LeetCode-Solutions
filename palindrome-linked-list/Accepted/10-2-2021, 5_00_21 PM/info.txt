{"id":564451364,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1633174221,"status_display":"Accepted","runtime":"349 ms","url":"/submissions/detail/564451364/","is_pending":"Not Pending","title":"Palindrome Linked List","memory":"128.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    bool isPalindrome(ListNode* head) {\n       \n        vector<int>ar;\n        ListNode *cur=head;\n        while(cur!=nullptr)\n        {\n            ar.push_back(cur->val);\n            cur=cur->next;\n        }\n        int a=0;\n        int b=ar.size()-1;\n        while(a<=b)\n        {\n            if(ar[a]!=ar[b])\n                return false;\n            a++;\n            b--;\n        }\n        return true;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"palindrome-linked-list"}