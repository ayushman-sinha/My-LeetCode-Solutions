{"id":561932969,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1632764280,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/561932969/","is_pending":"Not Pending","title":"Find Largest Value in Each Tree Row","memory":"22.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> largestValues(TreeNode* root) {\n        vector<int>ans;\n        if(root==nullptr)\n            return ans;\n        queue<TreeNode *>q;\n        q.push(root);\n        \n        while(!q.empty())\n        {\n             int size=q.size();\n        \n          long int max1=LONG_MIN;\n            while(size--)\n            {\n                    TreeNode *tmp=q.front();\n            q.pop();\n             if(tmp->val>max1)\n                 max1=tmp->val;\n                if(tmp->left)\n                    q.push(tmp->left);\n                if(tmp->right)\n                    q.push(tmp->right);\n            }\n            ans.push_back(max1);           \n         }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-largest-value-in-each-tree-row"}