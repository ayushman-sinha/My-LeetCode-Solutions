{"id":562247131,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1632809710,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/562247131/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"13.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<TreeNode *>ar;\n    void calc(TreeNode *root)\n    {\n        if(root==nullptr)\n            return;\n        ar.push_back(root);\n        calc(root->left);\n        calc(root->right);\n     }\n    void flatten(TreeNode* root) {\n        if(root==nullptr)\n            return;\n        calc(root);\n        TreeNode *tmp1=nullptr,*tmp2=root;\n        root=ar[0];\n        for(int i=1;i<ar.size();i++)\n        {\n           root->right=ar[i];\n            root->left=nullptr;\n         root=root->right;\n        }\n      \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list"}