{"id":564485171,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1633181403,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/564485171/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"7.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        ListNode *cur1=head,*cur2=head;\n        ListNode *prev=nullptr;\n        \n        while(cur1&&cur2&&cur2->next)\n        {\n            prev=cur1;\n            cur1=cur1->next;\n            cur2=cur2->next->next;\n          \n            if(cur1==cur2)\n            {\n                cur1=head;\n                while(cur1!=cur2)\n                {\n                    cur1=cur1->next;\n                    cur2=cur2->next;\n                }\n                return cur1;\n            }\n        }\n        return nullptr;\n        \n    }\n};","compare_result":"1111111111111111","title_slug":"linked-list-cycle-ii"}