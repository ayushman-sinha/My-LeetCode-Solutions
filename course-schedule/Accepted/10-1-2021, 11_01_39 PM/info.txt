{"id":564098245,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1633109499,"status_display":"Accepted","runtime":"41 ms","url":"/submissions/detail/564098245/","is_pending":"Not Pending","title":"Course Schedule","memory":"14 MB","code":"class Solution {\npublic:\n    int v;\n    list<int>*adj;\n    void addEdge(int u,int v)\n    {\n        adj[u].push_back(v);\n    }\n    bool isCyclic(int s,vector<bool>&visited,vector<bool>&stk )\n    {\n        if(visited[s]==false)\n        {\n            visited[s]=true;\n            stk[s]=true;\n            for(auto i=adj[s].begin();i!=adj[s].end();i++)\n            {\n                if(visited[*i]==false&&isCyclic(*i,visited,stk)==true)\n                    return true;\n                else if (stk[*i]==true)\n                return true;\n            }\n         }\n        stk[s]=false;\n        return false;\n    }\n    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {\n        v=numCourses;\n        adj=new list<int>[v];\n        for(int i=0;i<prerequisites.size();i++)\n        {\n            addEdge(prerequisites[i][0],prerequisites[i][1]);\n        }\n        vector<bool>visited(v,false);\n        vector<bool>stk(v,false);\n        bool b=false;\n        for(int i=0;i<v;i++)\n        {\n            if(isCyclic(i,visited,stk))\n            {\n                b=true;\n                break;\n            }\n         }\n        if(b)\n            return false;\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"course-schedule"}